'use client'

import "~/styles/globals.css";

// import { type Metadata } from "next";
import { Geist } from "next/font/google";

import { api, TRPCReactProvider } from "~/trpc/react";

import { Toaster } from "~/components/ui/sonner"
import { SidebarProvider, SidebarTrigger } from "~/components/ui/sidebar";
import { AppSidebar } from "~/components/app-sidebar";
// import { auth } from "~/lib/auth";
// import { headers } from "next/headers";
import { SessionProvider, useSession } from "~/context/SessionContext";
import { ChatProvider } from "~/context/ChatContext";

// import { authClient } from "~/lib/auth-client"
// import { useEffect, useState } from "react";

// import { AppSidebar } from "~/components/app-sidebar"
// import {
//   Breadcrumb,
//   BreadcrumbItem,
//   BreadcrumbLink,
//   BreadcrumbList,
//   BreadcrumbPage,
//   BreadcrumbSeparator,
// } from "~/components/ui/breadcrumb"
// import { Separator } from "~/components/ui/separator"
// import {
//   SidebarInset,
//   SidebarProvider,
//   SidebarTrigger,
// } from "~/components/ui/sidebar"



// export const metadata: Metadata = {
//   title: "Create T3 App",
//   description: "Generated by create-t3-app",
//   icons: [{ rel: "icon", url: "/favicon.ico" }],
// };

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {

  const sessionContext = useSession(); // Access session from context
  const session = sessionContext?.session;

  return (
    <html lang="en" className={`${geist.variable}`}>
      <body>
        <SessionProvider>
          <ChatProvider>
            <TRPCReactProvider>
              <SidebarProvider defaultOpen={false}>
                <AppSidebar />
                {/* {session?.user && <AppSidebar />} Render sidebar only if user is logged in */}
                <SidebarTrigger />
                <div style={{ flex: 1 }}>{children}</div>
              </SidebarProvider>
            </TRPCReactProvider>
          </ChatProvider>
        </SessionProvider>
      </body>
    </html>
  )
}
